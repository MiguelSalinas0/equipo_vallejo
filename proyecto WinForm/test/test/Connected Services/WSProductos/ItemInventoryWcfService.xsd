<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://www.cegid.fr/Retail/1.0" elementFormDefault="qualified" targetNamespace="http://www.cegid.fr/Retail/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="http://cegid.sportotal.com.ar/Y2_VAL/ItemInventoryWcfService.svc?xsd=xsd3" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <xs:element name="HelloWorld">
    <xs:annotation>
      <xs:documentation>HelloWorld method to validate the access to Web Services from every very light HTTP client via Javascript for example</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="text" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>Text to pass to test consumption.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="RetailContext">
    <xs:annotation>
      <xs:documentation>Application context.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="DatabaseId" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Identifier of the database to use in this execution context.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RetailContext" nillable="true" type="tns:RetailContext" />
  <xs:element name="HelloWorldResponse">
    <xs:annotation>
      <xs:documentation>HelloWorld method to validate the access to Web Services from every very light HTTP client via Javascript for example</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="HelloWorldResult" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>Returns the text typed upon entry, concatenated with phrase 'Hello You'</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableQty">
    <xs:annotation>
      <xs:documentation>Returns the quantity available in stock for an item without dimension or SKU.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="itemId" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>[Obsolete] - Item reference - uses the item search priorities</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="itemIdentifier" nillable="true" type="tns:ItemIdentifier">
          <xs:annotation>
            <xs:documentation>[Added 2013/08 - V1104] [Optional] - Default behavior: This property will replace [itemId] that will become obsolete before being deleted</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="storeId" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>[Added 2013/11 - V1104] [Optional] - Identifier of the store used. - Default behavior: If the warehouse [warehouseId] is not specified, the warehouse with the highest priority will be used - Related to column [ETABLISS.ET_ETABLISSEMENT]</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="warehouseId" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>[Obsolete] [Optional] - Identifier of the warehouse used. - Default behavior: Uses the user's default warehouse - Related to column [DEPOT.GDE_DEPOT]</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ItemIdentifier">
    <xs:annotation>
      <xs:documentation>Item identification criteria: provide either its 'ID' or 'Reference' to find an item respectively via its identifier or reference.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Item identifier. - Related to column [ARTICLE.GA_ARTICLE].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Reference" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Item reference - uses the item search priorities.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ItemIdentifier" nillable="true" type="tns:ItemIdentifier" />
  <xs:element name="GetAvailableQtyResponse">
    <xs:annotation>
      <xs:documentation>Returns the quantity available in stock for an item without dimension or SKU.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableQtyResult" nillable="true" type="tns:AvailableQtyReturn">
          <xs:annotation>
            <xs:documentation>Returns the quantity available in stock. Value 0 is returned if the item identifier or the warehouse identifier are incorrect.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="AvailableQtyReturn">
    <xs:annotation>
      <xs:documentation>Structure with two pieces of information. The cumulative quantities are in member AvailableQty.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="AvailableQty" type="xs:decimal">
        <xs:annotation>
          <xs:documentation>Quantity available in stock for the determined item. - Related to column [DISPO.GQ_RESERVEFOU / DISPO.GQ_ANNONCELIV / DISPO.GQ_ANNONCETRF / DISPO.GQ_PROPOACHAT / DISPO.GQ_PREPACLI / DISPO.GQ_DISPOCLI / DISPO.GQ_RESERVECLI / DISPO.GQ_RESERVETRF / DISPO.GQ_DEMRESERVECLI / DISPO.GQ_PANIERWEB].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="QueryStatus" type="tns:QueryExecutionStatus">
        <xs:annotation>
          <xs:documentation>Return type.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableQtyReturn" nillable="true" type="tns:AvailableQtyReturn" />
  <xs:simpleType name="QueryExecutionStatus">
    <xs:annotation>
      <xs:documentation>Possible return codes of the search function for the main warehouse of a store.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ok">
        <xs:annotation>
          <xs:documentation>Search was running well, warehouse found.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IncorrectWarehouseId">
        <xs:annotation>
          <xs:documentation>Wrong warehouse code.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IncorrectStoreId">
        <xs:annotation>
          <xs:documentation>Wrong store code.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="StoreNotFound">
        <xs:annotation>
          <xs:documentation>Store unknown.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>Undefined, error without functional explanation.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="QueryExecutionStatus" nillable="true" type="tns:QueryExecutionStatus" />
  <xs:element name="GetAvailableCumulativeQtyAllStores">
    <xs:annotation>
      <xs:documentation>Returns the cumulative quantities available in stock for all the stores accessible to the current user. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="itemId" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>[Obsolete] - Reference to use to determine the item for which the cumulative quantity from all stores must be returned.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="itemIdentifier" nillable="true" type="tns:ItemIdentifier">
          <xs:annotation>
            <xs:documentation>[Added 2013/08 - V1104] [Optional] - Default behavior: This property will replace [itemId] that will become obsolete before being deleted</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAvailableCumulativeQtyAllStoresResponse">
    <xs:annotation>
      <xs:documentation>Returns the cumulative quantities available in stock for all the stores accessible to the current user. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAvailableCumulativeQtyAllStoresResult" nillable="true" type="tns:AvailableQtyReturn">
          <xs:annotation>
            <xs:documentation>Returns an object containing both the cumulative quantity available in stock and the warehouse search status. If no warehouse can be determined, the cumulative quantity will be 0.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetInventoryDetailByStore">
    <xs:annotation>
      <xs:documentation>Returns the detail by warehouse of the quantity available in stock for an item without dimension or SKU. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="itemId" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>[Obsolete] - Reference to use to determine the item for which the detail by store must be returned.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="itemIdentifier" nillable="true" type="tns:ItemIdentifier">
          <xs:annotation>
            <xs:documentation>[Added 2013/08 - V1104] [Optional] - Default behavior: This property will replace [itemId] that will become obsolete before being deleted</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetInventoryDetailByStoreResponse">
    <xs:annotation>
      <xs:documentation>Returns the detail by warehouse of the quantity available in stock for an item without dimension or SKU. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetInventoryDetailByStoreResult" nillable="true" type="tns:ArrayOfAvailableQtyByStore">
          <xs:annotation>
            <xs:documentation>Returns a list of "store - available quantity" combinations. If no store is open or if the item is unknown, the returned list will be empty.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ArrayOfAvailableQtyByStore">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableQtyByStore" nillable="true" type="tns:AvailableQtyByStore" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfAvailableQtyByStore" nillable="true" type="tns:ArrayOfAvailableQtyByStore" />
  <xs:complexType name="AvailableQtyByStore">
    <xs:annotation>
      <xs:documentation>Object, of type combination, containing an available quantity and the identifier of the store whose main warehouse was select for inventory calculation.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="AvailableQty" type="xs:decimal">
        <xs:annotation>
          <xs:documentation>Quantity available in stock for the determined item. If the item reference could not determine the CBR item identifier, the returned quantity is set to 0.  - Related to column [DISPO.GQ_RESERVEFOU / DISPO.GQ_ANNONCELIV / DISPO.GQ_ANNONCETRF / DISPO.GQ_PROPOACHAT / DISPO.GQ_PREPACLI / DISPO.GQ_DISPOCLI / DISPO.GQ_RESERVECLI / DISPO.GQ_RESERVETRF / DISPO.GQ_DEMRESERVECLI / DISPO.GQ_PANIERWEB].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StoreDescription" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Identifier of the store whose main warehouse was used to read the available quantity. - Related to column [ETABLISS.ET_LIBELLE].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StoreId" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Store label. - Related to column [ETABLISS.ET_ETABLISSEMENT].</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableQtyByStore" nillable="true" type="tns:AvailableQtyByStore" />
  <xs:element name="UpdateShoppingCart">
    <xs:annotation>
      <xs:documentation>[Added 2013/08 - V1105] - Enables the differential update of the "Web shopping cart" quantity of an item for a given warehouse.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateShoppingCart_Request" />
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="UpdateShoppingCart_Request">
    <xs:annotation>
      <xs:documentation>Structure of the parameters used for update.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ItemIdentifier" nillable="true" type="tns:ItemIdentifier" />
      <xs:element name="Quantity" type="xs:decimal">
        <xs:annotation>
          <xs:documentation>Quantity. - Related to column [DISPO.GQ_PANIERWEB].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WarehouseId" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Warehouse ID. - Related to column [DISPO.GQ_DEPOT].</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="UpdateShoppingCart_Request" nillable="true" type="tns:UpdateShoppingCart_Request" />
  <xs:element name="UpdateShoppingCartResponse">
    <xs:annotation>
      <xs:documentation>[Added 2013/08 - V1105] - Enables the differential update of the "Web shopping cart" quantity of an item for a given warehouse.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="ResetShoppingCart">
    <xs:annotation>
      <xs:documentation>[Added 2013/08 - V1105] - Resets the "Web shopping cart" quantity of a item for a given warehouse. If no item is specified, the quantity is reset to 0 for all the warehouse.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="request" nillable="true" type="tns:ResetShoppingCart_Request" />
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ResetShoppingCart_Request">
    <xs:annotation>
      <xs:documentation>Structure of parameters used for reset.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="ItemIdentifier" nillable="true" type="tns:ItemIdentifier">
        <xs:annotation>
          <xs:documentation>[Optional].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WarehouseId" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Warehouse ID. - Related to column [DISPO.GQ_DEPOT].</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ResetShoppingCart_Request" nillable="true" type="tns:ResetShoppingCart_Request" />
  <xs:element name="ResetShoppingCartResponse">
    <xs:annotation>
      <xs:documentation>[Added 2013/08 - V1105] - Resets the "Web shopping cart" quantity of a item for a given warehouse. If no item is specified, the quantity is reset to 0 for all the warehouse.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetListItemInventoryDetailByStore">
    <xs:annotation>
      <xs:documentation>[Added 2013/10 - V1104] - Returns the detail of the quantity available in stock for an item list (generic, without dimension, or SKU) and a store list. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="inventoryStoreItemDetailRequest" nillable="true" type="tns:GetListItemInventoryDetailByStore_Request" />
        <xs:element minOccurs="0" name="clientContext" nillable="true" type="tns:RetailContext" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="GetListItemInventoryDetailByStore_Request">
    <xs:annotation>
      <xs:documentation>[Added 2013/10 - V1104] - Object used to convey data to get the item inventory detail by store</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="AllAvailableWarehouse" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] [Optional] - With warehouses visible to other stores? Otherwise, only the inventory of the store's main warehouse is visible - Default value: False.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="DetailSku" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] [Optional] - If this is a generic item, should the application detail SKUs and their inventory ? - Default value: False.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ItemIdentifiers" nillable="true" type="tns:ArrayOfItemIdentifier">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] - List of items to inventory. The item can be generic (GEN), single (UNI) or dimensioned (DIM).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="OnlyAvailableStock" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] [Optional] - Only data with positive inventory ? - Default value: False.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Pager" nillable="true" type="tns:Pager">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] [Optional] - Paging object.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="StoreIds" nillable="true" type="q1:ArrayOfstring">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] [Optional] - List of stores which inventory is to be returned. - Default behavior: Otherwise, inventory from all the stores accessible to the current user will be returned. - Related to column [ETABLISS.ET_ETABLISSEMENT].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="WithStoreName" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>[Added 2013/10 - V1104] [Optional] - Should we get the name of the store? - Default value: False.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetListItemInventoryDetailByStore_Request" nillable="true" type="tns:GetListItemInventoryDetailByStore_Request" />
  <xs:complexType name="ArrayOfItemIdentifier">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="ItemIdentifier" nillable="true" type="tns:ItemIdentifier" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfItemIdentifier" nillable="true" type="tns:ArrayOfItemIdentifier" />
  <xs:complexType name="Pager">
    <xs:annotation>
      <xs:documentation>Object for page management. 1st page: PageSize = 50, PageIndex = 1 - 2nd page: PageSize = 50, PageIndex = 2" </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int">
        <xs:annotation>
          <xs:documentation>[Optional] - Page index to return. 1 by default. - Default value: 1.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="PageSize" type="xs:int">
        <xs:annotation>
          <xs:documentation>[Optional] - Maximum number of lines to return per page. - Default value: 20.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Pager" nillable="true" type="tns:Pager" />
  <xs:element name="GetListItemInventoryDetailByStoreResponse">
    <xs:annotation>
      <xs:documentation>[Added 2013/10 - V1104] - Returns the detail of the quantity available in stock for an item list (generic, without dimension, or SKU) and a store list. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetListItemInventoryDetailByStoreResult" nillable="true" type="tns:GetListItemInventoryDetailByStore_Reply">
          <xs:annotation>
            <xs:documentation>Returns the list of inventory details</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="GetListItemInventoryDetailByStore_Reply">
    <xs:annotation>
      <xs:documentation>Reply of the GetListItemInventoryDetailByStore service</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="InventoryDetailsByStore" nillable="true" type="tns:ArrayOfAvailableQtyByItemByStore">
        <xs:annotation>
          <xs:documentation>Inventory list by item and store.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetListItemInventoryDetailByStore_Reply" nillable="true" type="tns:GetListItemInventoryDetailByStore_Reply" />
  <xs:complexType name="ArrayOfAvailableQtyByItemByStore">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableQtyByItemByStore" nillable="true" type="tns:AvailableQtyByItemByStore" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfAvailableQtyByItemByStore" nillable="true" type="tns:ArrayOfAvailableQtyByItemByStore" />
  <xs:complexType name="AvailableQtyByItemByStore">
    <xs:annotation>
      <xs:documentation>For one item: list of the stores and their inventory</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="ItemCode" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Item code.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StoresAvailableQty" nillable="true" type="tns:ArrayOfStoreAvailableQty">
        <xs:annotation>
          <xs:documentation>Inventory list by store.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableQtyByItemByStore" nillable="true" type="tns:AvailableQtyByItemByStore" />
  <xs:complexType name="ArrayOfStoreAvailableQty">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="StoreAvailableQty" nillable="true" type="tns:StoreAvailableQty" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStoreAvailableQty" nillable="true" type="tns:ArrayOfStoreAvailableQty" />
  <xs:complexType name="StoreAvailableQty">
    <xs:annotation>
      <xs:documentation>Quantity in stock for a store</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="AvailableQuantity" type="xs:decimal">
        <xs:annotation>
          <xs:documentation>Quantity in stock.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AvailableSkusQty" nillable="true" type="tns:ArrayOfAvailableSkuQty">
        <xs:annotation>
          <xs:documentation>List of SKUs and their quantity in stock.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StoreId" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Store ID.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StoreName" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
          </xs:appinfo>
          <xs:documentation>Store name.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="StoreAvailableQty" nillable="true" type="tns:StoreAvailableQty" />
  <xs:complexType name="ArrayOfAvailableSkuQty">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="AvailableSkuQty" nillable="true" type="tns:AvailableSkuQty" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfAvailableSkuQty" nillable="true" type="tns:ArrayOfAvailableSkuQty" />
  <xs:complexType name="AvailableSkuQty">
    <xs:annotation>
      <xs:documentation>Dimension list of the SKU with quantity in stock</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="AvailableQty" type="xs:decimal">
        <xs:annotation>
          <xs:documentation>SKU quantity available in stock.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Dimension1" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
          </xs:appinfo>
          <xs:documentation>Code of dimension 1.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Dimension2" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
          </xs:appinfo>
          <xs:documentation>Code of dimension 2.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Dimension3" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
          </xs:appinfo>
          <xs:documentation>Code of dimension 3.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Dimension4" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
          </xs:appinfo>
          <xs:documentation>Code of dimension 4.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Dimension5" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
          </xs:appinfo>
          <xs:documentation>Code of dimension 5.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AvailableSkuQty" nillable="true" type="tns:AvailableSkuQty" />
</xs:schema>